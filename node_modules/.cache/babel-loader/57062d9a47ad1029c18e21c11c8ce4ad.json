{"ast":null,"code":"var _jsxFileName = \"/Users/jakescreen/Documents/School/s2020/projects/kcashew/kcashewshome/src/components/Twitch.js\";\nimport React from \"react\";\nexport default class Twitch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    let url = \"https://api.twitch.tv/helix/users/follows?from_id=455825055\";\n    let usrs = [];\n    let expectedLength = 0;\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Client-ID': 'rc8uqc4k9iv82b8l339oymibbd3nkb'\n      }\n    }).then(Response => Response.json()).then(data => {\n      var newUrl = \"https://api.twitch.tv/helix/streams?\";\n\n      for (let i = 0; i < data.data.length; i++) {\n        newUrl += \"user_login=\" + data.data[i].to_name + \"&\";\n      }\n\n      return newUrl.slice(0, newUrl.length - 1);\n    }).then(rtn => {\n      fetch(rtn.toString(), {\n        method: 'GET',\n        headers: {\n          'Client-ID': 'rc8uqc4k9iv82b8l339oymibbd3nkb'\n        }\n      }).then(Response => Response.json()).then(data => {\n        for (let j = 0; j < data.data.length; j++) {\n          usrs.push({\n            name: data.data[j].user_name,\n            status: data.data[j].type,\n            title: data.data[j].title\n          });\n        }\n\n        return usrs;\n      }).then(arr => {\n        this.setState({\n          users: arr\n        });\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"twitchMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Twitch\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/jakescreen/Documents/School/s2020/projects/kcashew/kcashewshome/src/components/Twitch.js"],"names":["React","Twitch","Component","state","users","UNSAFE_componentWillMount","url","usrs","expectedLength","fetch","method","headers","then","Response","json","data","newUrl","i","length","to_name","slice","rtn","toString","j","push","name","user_name","status","type","title","arr","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAChDC,KADgD,GACxC;AACJC,MAAAA,KAAK,EAAE;AADH,KADwC;AAAA;;AAMhDC,EAAAA,yBAAyB,GAAG;AACxB,QAAIC,GAAG,GAAG,6DAAV;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,cAAc,GAAG,CAArB;AACAC,IAAAA,KAAK,CAACH,GAAD,EAAM;AACPI,MAAAA,MAAM,EAAE,KADD;AAEPC,MAAAA,OAAO,EAAE;AACL,qBAAa;AADR;AAFF,KAAN,CAAL,CAMKC,IANL,CAMUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANtB,EAOKF,IAPL,CAOUG,IAAI,IAAI;AACV,UAAIC,MAAM,GAAG,sCAAb;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,IAAI,CAACA,IAAL,CAAUG,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;AACrCD,QAAAA,MAAM,IAAI,gBAAgBD,IAAI,CAACA,IAAL,CAAUE,CAAV,EAAaE,OAA7B,GAAuC,GAAjD;AACH;;AACD,aAAOH,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBJ,MAAM,CAACE,MAAP,GAAgB,CAAhC,CAAP;AACH,KAbL,EAcKN,IAdL,CAcUS,GAAG,IAAI;AACTZ,MAAAA,KAAK,CAACY,GAAG,CAACC,QAAJ,EAAD,EAAiB;AAClBZ,QAAAA,MAAM,EAAE,KADU;AAElBC,QAAAA,OAAO,EAAE;AACL,uBAAa;AADR;AAFS,OAAjB,CAAL,CAKGC,IALH,CAKQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAMCF,IAND,CAMMG,IAAI,IAAI;AACV,aAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,IAAI,CAACA,IAAL,CAAUG,MAA7B,EAAqCK,CAAC,EAAtC,EAAyC;AACrChB,UAAAA,IAAI,CAACiB,IAAL,CAAU;AAACC,YAAAA,IAAI,EAAEV,IAAI,CAACA,IAAL,CAAUQ,CAAV,EAAaG,SAApB;AAA+BC,YAAAA,MAAM,EAAEZ,IAAI,CAACA,IAAL,CAAUQ,CAAV,EAAaK,IAApD;AAA0DC,YAAAA,KAAK,EAAEd,IAAI,CAACA,IAAL,CAAUQ,CAAV,EAAaM;AAA9E,WAAV;AACH;;AACD,eAAOtB,IAAP;AACH,OAXD,EAYCK,IAZD,CAYMkB,GAAG,IAAI;AACV,aAAKC,QAAL,CAAc;AAAC3B,UAAAA,KAAK,EAAE0B;AAAR,SAAd;AACF,OAdD;AAgBH,KA/BL;AAkCH;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ;AAOH;;AAtD+C","sourcesContent":["import React from \"react\";\n\nexport default class Twitch extends React.Component {\n    state = {\n        users: []\n    }\n    \n    \"https://api.twitch.tv/helix/streams?user_login=\"\n    UNSAFE_componentWillMount() {\n        let url = \"https://api.twitch.tv/helix/users/follows?from_id=455825055\"\n        let usrs = [];\n        let expectedLength = 0;\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Client-ID': 'rc8uqc4k9iv82b8l339oymibbd3nkb'\n            }\n        })\n            .then(Response => Response.json())\n            .then(data => {\n                var newUrl = \"https://api.twitch.tv/helix/streams?\";\n                for(let i = 0; i < data.data.length; i++){\n                    newUrl += \"user_login=\" + data.data[i].to_name + \"&\";\n                }\n                return newUrl.slice(0, newUrl.length - 1);\n            })\n            .then(rtn => {\n                fetch(rtn.toString(), {\n                    method: 'GET',\n                    headers: {\n                        'Client-ID': 'rc8uqc4k9iv82b8l339oymibbd3nkb'\n                    }\n                }).then(Response => Response.json())\n                .then(data => {\n                    for(let j = 0; j < data.data.length; j++){\n                        usrs.push({name: data.data[j].user_name, status: data.data[j].type, title: data.data[j].title})\n                    }\n                    return usrs;\n                })\n                .then(arr => {\n                   this.setState({users: arr});\n                })\n                \n            })\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"twitchMain\">\n                <h4>Twitch</h4>\n                \n            </div>\n\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}