{"ast":null,"code":"var _jsxFileName = \"/Users/jakescreen/Documents/School/s2020/projects/kcashew/kcashewshome/src/components/Novels.js\";\nimport React from \"react\";\nimport NovelArticles from \"./NovelArticles\";\n\nclass Novels extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      links: [\"https://www.royalroad.com/fiction/syndication/16946\", \"https://www.royalroad.com/fiction/syndication/26294\", \"https://www.royalroad.com/fiction/syndication/25275\", \"https://www.royalroad.com/fiction/syndication/12024\"],\n      posts: []\n    };\n  }\n\n  //loads novel posts into the state on load\n  componentdDidMount() {\n    var tmpPosts = []; //array to return of posts\n\n    var expectedLength = this.state.links.length; //how many links to fetch\n\n    for (let i = 0; i < expectedLength; i++) {\n      //fetches link with 2 posts each\n      fetch(\"https://feed.jquery-plugins.net/load?url=\" + this.state.links[i] + \"&maxCount=2&ShowDesc=false\").then(response => response.json()) //returns array size 2 of json object posts\n      .then(data => {\n        //pulls the title, link, and date of each post and adds to tmpPosts\n        for (let j = 0; j < data.data.length; j++) {\n          tmpPosts.push({\n            title: data.data[j].title,\n            date: data.data[j].publishDateFormatted,\n            link: data.data[j].link\n          });\n        }\n\n        return tmpPosts;\n      }).then(arr => {\n        //sets state once all posts are in\n        if (arr.length === expectedLength * 2) {\n          this.setState({\n            posts: arr\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"novelsMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Novels\"), React.createElement(NovelArticles, {\n      novs: this.state.posts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Novels;","map":{"version":3,"sources":["/Users/jakescreen/Documents/School/s2020/projects/kcashew/kcashewshome/src/components/Novels.js"],"names":["React","NovelArticles","Novels","Component","state","links","posts","componentdDidMount","tmpPosts","expectedLength","length","i","fetch","then","response","json","data","j","push","title","date","publishDateFormatted","link","arr","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AACA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACJC,MAAAA,KAAK,EAAE,CACH,qDADG,EAEH,qDAFG,EAGH,qDAHG,EAIH,qDAJG,CADH;AAOJC,MAAAA,KAAK,EAAE;AAPH,KAFyB;AAAA;;AAWjC;AACAC,EAAAA,kBAAkB,GAAG;AACjB,QAAIC,QAAQ,GAAG,EAAf,CADiB,CACE;;AACnB,QAAIC,cAAc,GAAG,KAAKL,KAAL,CAAWC,KAAX,CAAiBK,MAAtC,CAFiB,CAE6B;;AAC9C,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,cAApB,EAAoCE,CAAC,EAArC,EAAyC;AACrC;AACAC,MAAAA,KAAK,CAAC,8CAA8C,KAAKR,KAAL,CAAWC,KAAX,CAAiBM,CAAjB,CAA9C,GAAoE,4BAArE,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EACsC;AADtC,OAEKF,IAFL,CAEUG,IAAI,IAAI;AACV;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACA,IAAL,CAAUN,MAA9B,EAAsCO,CAAC,EAAvC,EAA2C;AACvCT,UAAAA,QAAQ,CAACU,IAAT,CAAc;AAAEC,YAAAA,KAAK,EAAEH,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaE,KAAtB;AAA6BC,YAAAA,IAAI,EAAEJ,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaI,oBAAhD;AAAsEC,YAAAA,IAAI,EAAEN,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaK;AAAzF,WAAd;AACH;;AACD,eAAOd,QAAP;AACH,OARL,EASKK,IATL,CASUU,GAAG,IAAI;AACT;AACA,YAAIA,GAAG,CAACb,MAAJ,KAAeD,cAAc,GAAG,CAApC,EAAuC;AACnC,eAAKe,QAAL,CAAc;AAAElB,YAAAA,KAAK,EAAEiB;AAAT,WAAd;AACH;AACJ,OAdL;AAeH;AACJ;;AACDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAzCgC;;AA2CrC,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\nimport NovelArticles from \"./NovelArticles\";\nclass Novels extends React.Component {\n    //contains links to webnovels and their latest 2 posts\n    state = {\n        links: [\n            \"https://www.royalroad.com/fiction/syndication/16946\",\n            \"https://www.royalroad.com/fiction/syndication/26294\",\n            \"https://www.royalroad.com/fiction/syndication/25275\",\n            \"https://www.royalroad.com/fiction/syndication/12024\"\n        ],\n        posts: []\n    };\n    //loads novel posts into the state on load\n    componentdDidMount() {\n        var tmpPosts = []; //array to return of posts\n        var expectedLength = this.state.links.length; //how many links to fetch\n        for (let i = 0; i < expectedLength; i++) {\n            //fetches link with 2 posts each\n            fetch(\"https://feed.jquery-plugins.net/load?url=\" + this.state.links[i] + \"&maxCount=2&ShowDesc=false\")\n                .then(response => response.json())//returns array size 2 of json object posts\n                .then(data => {\n                    //pulls the title, link, and date of each post and adds to tmpPosts\n                    for (let j = 0; j < data.data.length; j++) {\n                        tmpPosts.push({ title: data.data[j].title, date: data.data[j].publishDateFormatted, link: data.data[j].link });\n                    }\n                    return tmpPosts;\n                })\n                .then(arr => {\n                    //sets state once all posts are in\n                    if (arr.length === expectedLength * 2) {\n                        this.setState({ posts: arr });\n                    }\n                });\n        }\n    }\n    render() {\n        return (\n            <div className=\"novelsMain\">\n                <h4>Novels</h4>\n                <NovelArticles novs={this.state.posts} />\n            </div>\n        );\n    }\n}\nexport default Novels;"]},"metadata":{},"sourceType":"module"}